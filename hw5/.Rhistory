is_outlier <- function(x) {
return(x < quantile(x,0.25) - 1.5 * IQR(x) |
x > quantile(x, 0.73) + 1.5 * IQR(x))
}
mtcars %>%
group_by(hp) %>%
mutate(outlier = ifelse(is_outlier(mpg), mpg, as.numeric(NA))) %>%
ggplot(., aes(x = factor(hp), y = mpg)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
geom_point(size = 4, colour = 'lightgrey', alpha = 0.5) +
xlab("Horse Power") +
ylab("MPG") +
theme_bw()
is_outlier <- function(x) {
return(x < quantile(x,0.25) - 1.5 * IQR(x) |
x > quantile(x, 0.73) + 1.5 * IQR(x))
}
ozone %>%
group_by(Garden.location) %>%
mutate(outlier = ifelse(is_outlier(Ozone), Ozone, as.numeric(NA))) %>%
ggplot(., aes(x = factor(Garden.location), y = Ozone)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
geom_point(size = 4, colour = 'lightgrey', alpha = 0.5) +
xlab("Garden Location") +
ylab("Ozone Levels (pphm)") +
theme_bw()
ozone$outlier <- ifelse(is_outlier(ozone$mpg), ozone$mpg, as.numeric(NA))
mtcars$outlier <- ifelse(is_outlier(mtcars$mpg), mtcars$mpg, as.numeric(NA))
print(mtcars, n=nrow(ozone))
is_outlier <- function(x) {
return(x < quantile(x,0.25) - 1.5 * IQR(x) |
x > quantile(x, 0.73) + 1.5 * IQR(x))
}
mtcars %>%
group_by() %>%
mutate(outlier = ifelse(is_outlier(mpg), mpg, as.numeric(NA))) %>%
ggplot(., aes(x = factor(hp), y = mpg)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
geom_point(size = 4, colour = 'lightgrey', alpha = 0.5) +
xlab("Horse Power") +
ylab("MPG") +
theme_bw()
is_outlier <- function(x) {
return(x < quantile(x,0.25) - 1.5 * IQR(x) |
x > quantile(x, 0.73) + 1.5 * IQR(x))
}
mtcars %>%
group_by() %>%
mutate(outlier = ifelse(is_outlier(mpg), mpg, as.numeric(NA))) %>%
ggplot(., aes(x = factor(hp), y = 0)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
geom_point(size = 4, colour = 'lightgrey', alpha = 0.5) +
xlab("Horse Power") +
ylab("MPG") +
theme_bw()
is_outlier <- function(x) {
return(x < quantile(x,0.25) - 1.5 * IQR(x) |
x > quantile(x, 0.73) + 1.5 * IQR(x))
}
mtcars %>%
group_by() %>%
mutate(outlier = ifelse(is_outlier(mpg), mpg, as.numeric(NA))) %>%
ggplot(., aes(x = factor(hp), y = mpg)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
geom_point(size = 4, colour = 'lightgrey', alpha = 0.5) +
xlab("Horse Power") +
ylab("MPG") +
theme_bw()
mtcars %>%
group_by() %>%
mutate(outlier = ifelse(is_outlier(mpg), mpg, as.numeric(NA))) %>%
ggplot(., aes(x = factor(mtcars.index), y = mpg)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
geom_point(size = 4, colour = 'lightgrey', alpha = 0.5) +
xlab("Horse Power") +
ylab("MPG") +
theme_bw()
is_outlier <- function(x) {
return(x < quantile(x,0.25) - 1.5 * IQR(x) |
x > quantile(x, 0.73) + 1.5 * IQR(x))
}
mtcars %>%
group_by() %>%
mutate(outlier = ifelse(is_outlier(mpg), mpg, as.numeric(NA))) %>%
ggplot(., aes(x = factor(mtcars.index), y = mpg)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
geom_point(size = 4, colour = 'lightgrey', alpha = 0.5) +
xlab("Horse Power") +
ylab("MPG") +
theme_bw()
is_outlier <- function(x) {
return(x < quantile(x,0.25) - 1.5 * IQR(x) |
x > quantile(x, 0.73) + 1.5 * IQR(x))
}
mtcars %>%
group_by() %>%
mutate(outlier = ifelse(is_outlier(mpg), mpg, as.numeric(NA))) %>%
ggplot(., aes(x = factor(mtcars), y = mpg)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
geom_point(size = 4, colour = 'lightgrey', alpha = 0.5) +
xlab("Horse Power") +
ylab("MPG") +
theme_bw()
is_outlier <- function(x) {
return(x < quantile(x,0.25) - 1.5 * IQR(x) |
x > quantile(x, 0.73) + 1.5 * IQR(x))
}
mtcars %>%
group_by() %>%
mutate(outlier = ifelse(is_outlier(mpg), mpg, as.numeric(NA))) %>%
ggplot(., aes(x = factor(), y = mpg)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
geom_point(size = 4, colour = 'lightgrey', alpha = 0.5) +
xlab("Horse Power") +
ylab("MPG") +
theme_bw()
is_outlier <- function(x) {
return(x < quantile(x,0.25) - 1.5 * IQR(x) |
x > quantile(x, 0.73) + 1.5 * IQR(x))
}
mtcars %>%
group_by() %>%
mutate(outlier = ifelse(is_outlier(mpg), mpg, as.numeric(NA))) %>%
ggplot(., aes(x = factor(row), y = mpg)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
geom_point(size = 4, colour = 'lightgrey', alpha = 0.5) +
xlab("Horse Power") +
ylab("MPG") +
theme_bw()
is_outlier <- function(x) {
return(x < quantile(x,0.25) - 1.5 * IQR(x) |
x > quantile(x, 0.73) + 1.5 * IQR(x))
}
mtcars %>%
group_by() %>%
mutate(outlier = ifelse(is_outlier(mpg), mpg, as.numeric(NA))) %>%
ggplot(., aes(x = factor(), y = mpg)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
geom_point(size = 4, colour = 'lightgrey', alpha = 0.5) +
xlab("Horse Power") +
ylab("MPG") +
theme_bw()
is_outlier <- function(x) {
return(x < quantile(x,0.25) - 1.5 * IQR(x) |
x > quantile(x, 0.73) + 1.5 * IQR(x))
}
mtcars %>%
group_by() %>%
mutate(outlier = ifelse(is_outlier(mpg), mpg, as.numeric(NA))) %>%
ggplot(., aes(x = factor(cyl), y = mpg)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
geom_point(size = 4, colour = 'lightgrey', alpha = 0.5) +
xlab("Horse Power") +
ylab("MPG") +
theme_bw()
is_outlier <- function(x) {
return(x < quantile(x,0.25) - 1.5 * IQR(x) |
x > quantile(x, 0.73) + 1.5 * IQR(x))
}
mtcars %>%
group_by() %>%
mutate(outlier = ifelse(is_outlier(mpg), mpg, as.numeric(NA))) %>%
ggplot(., aes(x = factor(cyl), y = mpg)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
geom_point(size = 4, colour = 'lightgrey', alpha = 0.5) +
xlab("Cylinders") +
ylab("MPG") +
theme_bw()
# Clear the memory.
rm(list = ls())
# Load libraries.
# Clear the memory.
rm(list = ls())
# Load libraries.
library(ggplot2)
library(dplyr)
library(readr)
ozone <- read.csv('ozone.csv')
names(ozone)
# Look at a horizontal view of the data using "glimpse()".
ggplot(ozone)
ggplot(ozone$Ozone)
ggplot(ozone, aes(x=Ozone, color=Garden.location)) +
geom_histogram(fill="white", alpha=0.5, position="identity", bins = 10, binwidth = 2)
ggplot(ozone, aes(x=Ozone, color=Garden.location))
ggplot(ozone, aes(x=location, y = Ozone))
ggplot(ozone, aes(x=location))+
geom_histogram()
ggplot(ozone, aes(x=location)) + geom_histogram()
ggplot(ozone, aes(x=ozone$location)) + geom_histogram()
ggplot(ozone, aes(x=ozone$Ozone)) + geom_histogram()
hist(ozone)
hist(ozone$Ozone)
print(mean(ozone$Ozone))
print(sd(ozone$Ozone))
print(sd(ozone$Ozone)/sqrt(length((ozone$Ozone))))
# Display the results for the ozone levels.
mean = mean(ozone$Ozone
std =  sd(ozone$Ozone)
mean <- mean(ozone$Ozone
mean <- mean(ozone$Ozone
mean <- mean(ozone$Ozone)
std <-  sd(ozone$Ozone)
std_err = sd(ozone$Ozone)/sqrt(length(dozone$Ozone))
mean <- mean(ozone$Ozone)
std <-  sd(ozone$Ozone)
std_err = sd(ozone$Ozone)/sqrt(length(ozone$Ozone))
# Display the results for the ozone levels.
# Recall what is in the Ozone dataset
ozone
var.test(ozone$Ozone)
# Recall what is in the Ozone dataset
? var.test()
# Recall what is in the Ozone dataset
east <- filter(ozone, group=="East")
# Recall what is in the Ozone dataset
east <- filter(ozone, Garden.location=="East")
east_mean = round(mean(ozone$Ozone), 3)
east_cv = round(sd(East$Ozone) / East_mean * 100, 3)
# Recall what is in the Ozone dataset
east <- filter(ozone, Garden.location=="East")
east_mean = round(mean(ozone$Ozone), 3)
east_cv = round(sd(east$Ozone) / East_mean * 100, 3)
# Recall what is in the Ozone dataset
east <- filter(ozone, Garden.location=="East")
east_mean = round(mean(ozone$Ozone), 3)
east_cv = round(sd(east$Ozone) / east_mean * 100, 3)
east_iqr = round(IQR(east$Ozone), 3)
west <- filter(balance, Garden.location=="West")
# Recall what is in the Ozone dataset
east <- filter(ozone, Garden.location=="East")
east_mean = round(mean(ozone$Ozone), 3)
east_cv = round(sd(east$Ozone) / east_mean * 100, 3)
east_iqr = round(IQR(east$Ozone), 3)
west <- filter(ozone, Garden.location=="West")
west_mean = round(mean(west$Ozone), 3)
west_cv = round(sd(west$Ozone) / west_mean * 100, 3)
west_iqr = round(IQR(west$Ozone), 3)
var.test(east$Ozone, west$Ozone)
var.test(east$Ozone, west$Ozone)
mean <- mean(ozone$Ozone)
std <-  sd(ozone$Ozone)
std_err = sd(ozone$Ozone)/sqrt(length(ozone$Ozone))
east <- filter(ozone, Garden.location=="East")
east_mean = round(mean(ozone$Ozone), 3)
east_std_err = sd(east$Ozone)/sqrt(length(east$Ozone))
west <- filter(ozone, Garden.location=="West")
west_mean = round(mean(west$Ozone), 3)
wet_std_err = sd(west$Ozone)/sqrt(length(west$Ozone))
# Display the results for the ozone levels.
east <- filter(ozone, Garden.location=="East")
east_mean = round(mean(east$Ozone), 3)
east_std_dev = sd(east$Ozone)
east_std_err = round(sd(east$Ozone)/sqrt(length(east$Ozone)), 3)
west <- filter(ozone, Garden.location=="West")
west_mean = round(mean(west$Ozone), 3)
west_std_dev = sd(west$Ozone)
west_std_err = round(sd(west$Ozone)/sqrt(length(west$Ozone)), 3)
# Display the results for the ozone levels.
glue('East garden mean ozone: {east_mean}, STD: {east_std_dev}, std error: {east_std_err}')
library(glue)
east <- filter(ozone, Garden.location=="East")
east_mean = round(mean(east$Ozone), 3)
east_std_dev = sd(east$Ozone)
east_std_err = round(sd(east$Ozone)/sqrt(length(east$Ozone)), 3)
west <- filter(ozone, Garden.location=="West")
west_mean = round(mean(west$Ozone), 3)
west_std_dev = sd(west$Ozone)
west_std_err = round(sd(west$Ozone)/sqrt(length(west$Ozone)), 3)
# Display the results for the ozone levels.
glue('East garden mean ozone: {east_mean}, STD: {east_std_dev}, std error: {east_std_err}')
glue('West garden mean ozone: {west_mean}, STD: {west_std_dev}, std error: {west_std_err}')
library(glue)
east <- filter(ozone, Garden.location=="East")
east_mean = round(mean(east$Ozone), 3)
east_std_dev = round(sd(east$Ozone), 3)
east_std_err = round(sd(east$Ozone)/sqrt(length(east$Ozone)), 3)
west <- filter(ozone, Garden.location=="West")
west_mean = round(mean(west$Ozone), 3)
west_std_dev = round(sd(west$Ozone), 3)
west_std_err = round(sd(west$Ozone)/sqrt(length(west$Ozone)), 3)
# Display the results for the ozone levels.
glue('East garden mean ozone: {east_mean}, STD: {east_std_dev}, std error: {east_std_err}')
glue('West garden mean ozone: {west_mean}, STD: {west_std_dev}, std error: {west_std_err}')
var.test(east$Ozone, west$Ozone)
knitr::opts_chunk$set(echo = TRUE)
# Create various Q-Q plots of the data.
par(mfrow = c(1,2))
qqnorm(old$movement, main = 'Elderly')
par(mfrow = c(1,2))
qqnorm(east$Ozone, main = 'East')
qqline(east$Ozone)
qqnorm(west$Ozone, main = 'West')
qqline(west$Ozone)
qqnorm(ozone$Ozone)
qqline(ozone$Ozone)
knitr::opts_chunk$set(echo = TRUE)
# Clear the memory.
rm(list = ls())
# install.packages('ggplot2')
# install.packages('dplyr')
# install.packages('readr')
# Load libraries.
library(ggplot2)
library(dplyr)
library(readr)
# Load the data set "balance.csv" and assign it to
# an object named "balance".
balance <- read.csv('balance.csv')
print(summary(balance))
balance
young <- filter(balance, group=="Young")
young_mean = round(mean(young$movement), 3)
young_cv = round(sd(young$movement) / young_mean * 100, 3)
young_iqr = round(IQR(young$movement), 3)
old <- filter(balance, group=="Elderly")
old_mean = round(mean(old$movement), 3)
old_cv = round(sd(old$movement) / old_mean * 100, 3)
old_iqr = round(IQR(old$movement), 3)
library(glue)
glue('Mean movement of young people: {young_mean}, CV: {young_cv}, IQR: {young_iqr}')
glue('Mean movement of old people: {old_mean}, CV: {old_cv}, IQR: {old_iqr}')
# print('Mean movement of elder people: ' + mean(old$movement))
dof = nrow(young) + nrow(old) - 2
print(dof)
ggplot(balance, aes(x=movement, color=group)) +
geom_histogram(fill="white", alpha=0.5, position="identity", bins = 10, binwidth = 2)
is_outlier <- function(x) {
return(x < quantile(x,0.25) - 1.5 * IQR(x) |
x > quantile(x, 0.73) + 1.5 * IQR(x))
}
balance %>%
group_by(group) %>%
mutate(outlier = ifelse(is_outlier(movement), movement, as.numeric(NA))) %>%
ggplot(., aes(x = factor(group), y = movement)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
geom_point(size = 4, colour = 'lightgrey', alpha = 0.5) +
xlab("Age Group") +
ylab("Movement (square mm)") +
theme_bw()
# balance$outlier <- ifelse(is_outlier(balance$movement), balance$movement, as.numeric(NA))
# print(balance, n=nrow(balance))
# Get help on "var.test()".
? var.test()
# Perform the equality of variance test.
var.test(young$movement, old$movement, alternative = 'two.sided')
# Create various Q-Q plots of the data.
par(mfrow = c(1,2))
qqnorm(old$movement, main = 'Elderly')
qqline(old$movement)
qqnorm(young$movement, main = 'Young')
qqline(young$movement)
qqnorm(balance$movement, main = 'Everyone')
qqline(balance$movement)
?t.test()
Alpha_value = 0.01
Degrees_of_freedom = 15
Num_Estimated_Parameters <- 2
Num_Elderly <- length(which(balance$group == 'Elderly'))
Num_Young<- length(which(balance$group == 'Young'))
DOF <- Num_Elderly + Num_Young - Num_Estimated_Parameters
Num_Elderly
Num_Young
DOF
print(Critical_Value <- qt(1-(Alpha_value/2),Degrees_of_freedom))
welch_on <- t.test(old$movement, young$movement, var.equal = TRUE, conf.level = 1-Alpha_value)
welch_off <- t.test(old$movement, young$movement, var.equal = FALSE, conf.level = 1-Alpha_value)
welch_on
welch_off
Alpha_value = 0.1
Degrees_of_freedom = 15
print(Critical_Value <- qt(1-(Alpha_value/2),Degrees_of_freedom))
welch_on <- t.test(old$movement, young$movement, var.equal = TRUE, conf.level = 1-Alpha_value)
welch_off <- t.test(old$movement, young$movement, var.equal = FALSE, conf.level = 1-Alpha_value)
welch_on
welch_off
knitr::opts_chunk$set(echo = TRUE)
? geom_qq()
ggplot(ozone, aes(sample = Ozone)) +
stat_qq() +
stat_qq_line()
# ggplot(ozone, aes(sample = Ozone)) +
#   stat_qq() +
#   stat_qq_line()
# ggplot(ozone, aes(sample = Ozone, colour = factor(cyl))) +
#   stat_qq() +
#   stat_qq_line()
#
ozone
knitr::opts_chunk$set(echo = TRUE)
# Clear the memory.
rm(list = ls())
# Load libraries ggplot2, dpylr, readr
library(ggplot2)
library(dplyr)
library(readr)
ozone <- read.csv('ozone.csv')
# View(ozone)
# Look at a horizontal view of the data
# using "glimpse()".
glimpse(ozone)
ggplot(ozone, aes(x=Ozone, color=Garden.location)) +
geom_histogram(fill="white", alpha=0.5, position="identity", bins = 10, binwidth = 2)
boxplot(ozone$Ozone)
is_outlier <- function(x) {
return(x < quantile(x,0.25) - 1.5 * IQR(x) |
x > quantile(x, 0.73) + 1.5 * IQR(x))
}
ozone %>%
group_by(Garden.location) %>%
mutate(outlier = ifelse(is_outlier(Ozone), Ozone, as.numeric(NA))) %>%
ggplot(., aes(x = factor(Garden.location), y = Ozone)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
geom_point(size = 4, colour = 'lightgrey', alpha = 0.5) +
xlab("Garden Location") +
ylab("Ozone Levels (pphm)") +
theme_bw()
# Get list of built-in R data sets.
library(dplyr)
library(ggplot2)
# Get the "mtcars" built-in data set.
data(mtcars)
# View the data.
mtcars
is_outlier <- function(x) {
return(x < quantile(x,0.25) - 1.5 * IQR(x) |
x > quantile(x, 0.73) + 1.5 * IQR(x))
}
mtcars %>%
group_by() %>%
mutate(outlier = ifelse(is_outlier(mpg), mpg, as.numeric(NA))) %>%
ggplot(., aes(x = factor(cyl), y = mpg)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
geom_point(size = 4, colour = 'lightgrey', alpha = 0.5) +
xlab("Cylinders") +
ylab("MPG") +
theme_bw()
# mtcars$outlier <- ifelse(is_outlier(mtcars$mpg), mtcars$mpg, as.numeric(NA))
# print(mtcars, n=nrow(ozone))
# Clear the memory.
rm(list = ls())
# Load libraries.
library(ggplot2)
library(dplyr)
library(readr)
ozone <- read.csv('ozone.csv')
names(ozone)
# Look at a horizontal view of the data using "glimpse()".
hist(ozone$Ozone)
library(glue)
east <- filter(ozone, Garden.location=="East")
east_mean = round(mean(east$Ozone), 3)
east_std_dev = round(sd(east$Ozone), 3)
east_std_err = round(sd(east$Ozone)/sqrt(length(east$Ozone)), 3)
west <- filter(ozone, Garden.location=="West")
west_mean = round(mean(west$Ozone), 3)
west_std_dev = round(sd(west$Ozone), 3)
west_std_err = round(sd(west$Ozone)/sqrt(length(west$Ozone)), 3)
# Display the results for the ozone levels.
glue('East garden mean ozone: {east_mean}, STD: {east_std_dev}, std error: {east_std_err}')
glue('West garden mean ozone: {west_mean}, STD: {west_std_dev}, std error: {west_std_err}')
# Recall what is in the Ozone dataset
var.test(east$Ozone, west$Ozone)
par(mfrow = c(1,2))
qqnorm(east$Ozone, main = 'East')
qqline(east$Ozone)
qqnorm(west$Ozone, main = 'West')
qqline(west$Ozone)
qqnorm(ozone$Ozone)
qqline(ozone$Ozone)
# ggplot(ozone, aes(sample = Ozone)) +
#   stat_qq() +
#   stat_qq_line()
# ggplot(ozone, aes(sample = Ozone, colour = factor(cyl))) +
#   stat_qq() +
#   stat_qq_line()
#
ozone
# ?t.test()
ggplot(ozone, aes(sample = Ozone)) +
stat_qq() +
stat_qq_line()
ggplot(ozone, aes(sample = Ozone, colour = factor(cyl))) +
stat_qq() +
stat_qq_line()
ggplot(ozone, aes(sample = Ozone)) +
stat_qq() +
stat_qq_line()
# ozone
alpha = 0.05
dof = nrow(east) + nrow(west) - 2
?t.test()
$\alpha$
print(Critical_Value <- qt(1-(alpha/2),dof))
t.test(east$Ozone, west$Ozone, var.equal = TRUE, conf.level = 1-alpha)
t.test(east$Ozone, west$Ozone, var.equal = FALSE, conf.level = 1-alpha)
