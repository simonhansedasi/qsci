tukey_hsd(model_grow)
tukey_hsd(aov(model_grow))
posthoc_analysis <- tukey_hsd(aov(model_grow))
posthoc_analysis
plot(posthoc_analysis)
knitr::opts_chunk$set(echo = TRUE)
#Clear the memory
rm(list = ls())
##
# Load libraries
#Clear the memory
rm(list = ls())
##
# Load libraries
library(ggplot2)
library(dplyr)
library(ggfortify)
library(readr)
Insect_Spray <- read.csv("Insect_Sprays.csv")
#Clear the memory
rm(list = ls())
##
# Load libraries
library(ggplot2)
library(dplyr)
library(ggfortify)
library(readr)
Insect_Spray <- read.csv("InsectSprays.csv")
Insect_Spray <- read.csv("InsectSprays.csv")
#Clear the memory
rm(list = ls())
##
# Load libraries
library(ggplot2)
library(dplyr)
library(ggfortify)
library(readr)
glimpse(Insect_Spray)
Insect_Spray <- read.csv("InsectSprays.csv")
glimpse(Insect_Spray)
by(Insect_Spray, Insect_Spray$spray, summary)
View(Insect_Spray)
View(Insect_Spray)
Insect_Spray %>%
group_by(spray) %>%
summarise(summary = summary(count))
Insect_Spray %>%
group_by(spray) %>%
summarise(summary = count)
Insect_Spray %>%
group_by(spray) %>%
summarise(IQR = q3(count) - q1(count))
summary(Insect_Spray$count)
Insect_Spray %>%
group_by(spray) %>%
summary(IQR = q3(count) - q1(count))
Insect_Spray %>%
group_by(spray)
Insect_Spray %>%
group_by(spray) %>%
summarise(total = sum(count))
Insect_Spray %>%
group_by(spray) %>%
summarise(total = sum(count)) %>%
summarise(sum.total = sum(count))
Insect_Spray %>%
group_by(spray) %>%
summarise(total = sum(count)) %>%
summarise(sum.total = sum(count))
Insect_Spray %>%
group_by(spray) %>%
summarise(total.number = sum(count)) %>%
Insect_Spray %>%
group_by(spray) %>%
summarise(total.number = sum(Insect_Spray$count)) %>%
Insect_Spray %>%
group_by(spray) %>%
summary(total.number = sum(Insectcount)) %>%
Insect_Spray %>%
group_by(spray) %>%
summarise(
total_count = sum(count)
)
Insect_Spray %>%
group_by(spray) %>%
summarise(
total_count = sum(count),
count_IQR = IQR(count)
)
Insect_Spray %>%
group_by(spray) %>%
summarise(
total_count = sum(count),
count_IQR = IQR(count)
count_min = min(count)
Insect_Spray %>%
group_by(spray) %>%
summarise(
total_count = sum(count),
count_IQR = IQR(count),
count_min = min(count),
count_max = max(count),
)
Insect_Spray %>%
group_by(spray) %>%
summarise(
total_count = sum(count),
count_IQR = IQR(count),
count_min = min(count),
count_mean = mean(count)
count_max = max(count),
Insect_Spray %>%
group_by(spray) %>%
summarise(
total_count = sum(count),
count_IQR = IQR(count),
count_min = min(count),
count_mean = mean(count),
count_max = max(count),
)
# Flip the axes
ggplot(Insect_Spray, aes(x = Spray, y = count)) +
geom_boxplot() +
theme_bw() +
coord_flip()
# Flip the axes
ggplot(Insect_Spray, aes(x = spray, y = count)) +
geom_boxplot() +
theme_bw() +
coord_flip()
# Don't flip the axes
ggplot(Insect_Spray, aes(x = Spray, y = count)) +
geom_boxplot() +
theme_bw() +
# coord_flip()
# Incorporate an identification of any outliers in the boxplot.
# Flip the axes
ggplot(Insect_Spray, aes(x = spray, y = count)) +
geom_boxplot() +
theme_bw() +
coord_flip()
# Don't flip the axes
ggplot(Insect_Spray, aes(x = spray, y = count)) +
geom_boxplot() +
theme_bw() +
# coord_flip()
# Incorporate an identification of any outliers in the boxplot.
# Flip the axes
ggplot(Insect_Spray, aes(x = spray, y = count)) +
geom_boxplot() +
theme_bw() +
coord_flip()
# Don't flip the axes
ggplot(Insect_Spray, aes(x = spray, y = count)) +
geom_boxplot() +
theme_bw()
# coord_flip()
# Incorporate an identification of any outliers in the boxplot.
# Flip the axes
ggplot(Insect_Spray, aes(x = spray, y = count)) +
geom_boxplot() +
theme_bw() +
coord_flip()
# Don't flip the axes
ggplot(Insect_Spray, aes(x = spray, y = count)) +
geom_boxplot() +
theme_bw()
# coord_flip()
# Incorporate an identification of any outliers in the boxplot.
Insect_Spray %>%
group_by(growth.rate) %>%
mutate(outlier = ifelse(is_outlier(growth.rate), growth.rate, as.numeric(NA))) %>%
ggplot(., aes(x = factor(parasite), y = growth.rate)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
geom_point(size = 1, colour = 'black', alpha = 0.5) +
xlab('Spray') +
ylab("# of Insects on Plant") +
theme_bw() +
# coord_flip()
# Flip the axes
ggplot(Insect_Spray, aes(x = spray, y = count)) +
geom_boxplot() +
theme_bw() +
coord_flip()
# Don't flip the axes
ggplot(Insect_Spray, aes(x = spray, y = count)) +
geom_boxplot() +
theme_bw()
# coord_flip()
# Incorporate an identification of any outliers in the boxplot.
Insect_Spray %>%
group_by(spray) %>%
mutate(outlier = ifelse(is_outlier(growth.rate), growth.rate, as.numeric(NA))) %>%
ggplot(., aes(x = factor(parasite), y = growth.rate)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
geom_point(size = 1, colour = 'black', alpha = 0.5) +
xlab('Spray') +
ylab("# of Insects on Plant") +
theme_bw() +
# coord_flip()
# Flip the axes
ggplot(Insect_Spray, aes(x = spray, y = count)) +
geom_boxplot() +
theme_bw() +
coord_flip()
# Don't flip the axes
ggplot(Insect_Spray, aes(x = spray, y = count)) +
geom_boxplot() +
theme_bw()
# coord_flip()
# Incorporate an identification of any outliers in the boxplot.
Insect_Spray %>%
group_by(spray) %>%
mutate(outlier = ifelse(is_outlier(count), count, as.numeric(NA))) %>%
ggplot(., aes(x = factor(spray), y = count)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
geom_point(size = 1, colour = 'black', alpha = 0.5) +
xlab('Spray') +
ylab("# of Insects on Plant") +
theme_bw() +
# coord_flip()
# Flip the axes
ggplot(Insect_Spray, aes(x = spray, y = count)) +
geom_boxplot() +
theme_bw() +
coord_flip()
# Don't flip the axes
ggplot(Insect_Spray, aes(x = spray, y = count)) +
geom_boxplot() +
theme_bw()
# coord_flip()
# Incorporate an identification of any outliers in the boxplot.
Insect_Spray %>%
group_by(spray) %>%
mutate(outlier = ifelse(is_outlier(count), count, as.numeric(NA))) %>%
ggplot(., aes(x = factor(spray), y = count)) +
geom_boxplot() +
geom_text(aes(label = outlier), na.rm = TRUE, hjust = -0.3)+
geom_point(size = 1, colour = 'black', alpha = 0.5) +
xlab('Spray') +
ylab("# of Insects on Plant") +
theme_bw()
# coord_flip()
model_spray <- lm(count ~ spray, data = Insect_Spray)
model_spray
##
# Plot four diagnostic plots that
# examine the residuals.
##
autoplot(model_spray, smooth.colour = NA)
model_spray <- lm(count ~ spray, data = Insect_Spray)
model_spray
##
# Plot four diagnostic plots that
# examine the residuals.
##
autoplot(model_spray, smooth.colour = NA)
Num_obs <- Insect_Spray %>%
group_by (rep) %>%
summarise(n())%>%
nrow()
Num_obs <- Insect_Spray %>%
group_by (rep) %>%
summarise(n = length(rep))%>%
# nrow()
Num_obs <- Insect_Spray %>%
group_by (rep) %>%
summarise(n = length(rep))
# nrow()
Num_obs <- Insect_Spray %>%
group_by (rep) %>%
summarise(n = length(rep))
# nrow()
Num_obs <- Insect_Spray %>%
group_by (rep) %>%
summarise(n = length(rep))
# nrow()
Num_obs
Num_obs <- Insect_Spray %>%
group_by (spray) %>%
summarise(n = length(rep))
# nrow()
Num_obs
Num_obs <- Insect_Spray %>%
group_by (rep) %>%
summarise(n())%>%
nrow()
Num_obs <- Insect_Spray %>%
group_by (spray) %>%
summarise(n = sum(count))%>%
nrow()
Num_obs <- Insect_Spray %>%
group_by (spray) %>%
summarise(n = sum(count))%>%
Num_obs
Num_obs <- Insect_Spray %>%
group_by (spray) %>%
summarise(n = sum(count))%>%
Num_obs
Num_obs <- Insect_Spray %>%
group_by (spray) %>%
summarise(n = sum(count))
Num_obs
Num_obs <- Insect_Spray %>%
group_by (spray) %>%
summarise(n = sum(rep))
Num_obs
Num_obs <- Insect_Spray %>%
group_by (spray) %>%
summarise(n = length(rep))
Num_obs
Num_obs <- Insect_Spray %>%
group_by (spray) %>%
summarise(number.observations = length(rep))
Num_obs
Num_obs <- Insect_Spray %>%
group_by (spray) %>%
summarise(number.observations = length(rep))
Num_obs
Num_treatments <- Insect_Spray %>%
group_by(spray) %>%
summarise(n=lengt(Num_treatments))
Num_treatments <- Insect_Spray %>%
group_by(spray) %>%
summarise(n=length(Num_treatments))
Num_treatments <- Insect_Spray %>%
group_by(spray) %>%
summarise(n=length(Num_treatments))
Num_treatments <- Insect_Spray %>%
group_by(spray) %>%
summarise(n=length(Num_treatments))
Num_treatments <- Insect_Spray %>%
group_by(spray) %>%
summarise(n=length(spray))
Num_treatments
Num_treatments <- Insect_Spray %>%
group_by(spray) %>%
summarise(n=ncol(spray))
Num_treatments
Num_treatments <- Insect_Spray %>%
group_by(spray) %>%
summarise(n=nrow(spray))
Num_treatments
Num_obs <- Insect_Spray %>%
group_by (rep) %>%
summarise(n=sum(spray))%>%
nrow()
Num_obs <- Insect_Spray %>%
group_by (rep) %>%
summarise(n=unique(spray))%>%
nrow()
Num_obs <- Insect_Spray %>%
group_by (rep) %>%
summarise(n=length(spray))%>%
nrow()
Num_obs <- Insect_Spray %>%
group_by (rep) %>%
summarise(n=length(spray))%>%
Num_obs
Num_obs <- Insect_Spray %>%
group_by (rep) %>%
summarise(n=length(spray))
Num_obs
Num_obs <- Insect_Spray %>%
group_by (rep) %>%
summarise(n=length(spray))
Num_obs
Num_obs <- Insect_Spray %>%
group_by (rep) %>%
summarise(n())%>%
nrow()
Num_treatments <- Insect_Spray %>%
group_by(spray) %>%
summarise(n=nrow(rep))
Num_treatments
Num_treatments <- Insect_Spray %>%
group_by(spray) %>%
summarise(n=length(rep))
Num_treatments
Num_obs <- Insect_Spray %>%
group_by (rep) %>%
summarise(n=length(rep))
Num_obs
Num_obs <- Insect_Spray %>%
group_by (spray) %>%
summarise(n=length(rep))
Num_obs
length(unique(Insect_Spray$spray))
treatments <- length(unique(Insect_Spray$spray))
treatments <- length(unique(Insect_Spray$spray))
treatments
Num_obs <- Insect_Spray %>%
group_by (spray) %>%
summarise(number.observations = length(rep))
Num_obs
Num_treatments <- Insect_Spray %>%
group_by(spray) %>%
summarise(n=length(rep))
Num_treatments
treatments <- length(unique(Insect_Spray$spray))
treatments
Num_obs <- Insect_Spray %>%
group_by (rep) %>%
summarise(n())%>%
nrow()
Num_obs
Num_treatments
Num_obs
Num_obs <- Insect_Spray %>%
group_by (rep) %>%
summarise(n())%>%
nrow()
Num_treatments <- Insect_Spray %>%
group_by(spray) %>%
summarise(n()) %>%
nrow()
Num_treatments
Num_DOF <- Num_treatments-1
Den_DOF <- Num_treatments*((Num_obs)-1)
print(Num_DOF)
print(Num_DOF)
print(Den_DOF)
print(Critcial_F_Value <- qf(1-Alpha_value,
Num_DOF,Den_DOF))
Alpha_value = 0.05
print(Critcial_F_Value <- qf(1-Alpha_value,
Num_DOF,Den_DOF))
2.353809
# Create ANOVA table and print the results.
print(ANOVA_Table <- anova(model_spray))
ANOVA_Table
# View(Insect_Spray)
str(Insect_Spray)
# View(Insect_Spray)
str(Insect_Spray)
unique(Insect_Spray)
# View(Insect_Spray)
str(Insect_Spray)
length(Insect_Spray)
# View(Insect_Spray)
str(Insect_Spray)
column_names(Insect_Spray)
# View(Insect_Spray)
str(Insect_Spray)
colnames(Insect_Spray)
# View(Insect_Spray)
str(Insect_Spray)
colnames(Insect_Spray)
nrow(Insect_Spray)
ncol(Insect_Spray)
model_spray <- lm(spray ~ count, data = Insect_Spray)
model_spray <- lm(count ~ spray, data = Insect_Spray)
model_spray
##
# Plot four diagnostic plots that
# examine the residuals.
##
autoplot(model_spray, smooth.colour = NA)
Num_obs <- Insect_Spray %>%
group_by (rep) %>%
summarise(n())%>%
nrow()
Num_obs
Num_treatments <- Insect_Spray %>%
group_by(spray) %>%
summarise(n()) %>%
nrow()
Num_treatments
Num_DOF <- Num_treatments-1
Den_DOF <- Num_treatments*((Num_obs)-1)
print(Num_DOF)
print(Den_DOF)
Alpha_value = 0.05
Critical_F_Value
(Critcial_F_Value <- qf(1-Alpha_value,
Num_DOF,Den_DOF))
Critical_F_Value
Critcial_F_Value <- qf(1-Alpha_value,
Num_DOF,Den_DOF)
Critical_F_Value
Critical_F_Value <- qf(1-Alpha_value,
Num_DOF,Den_DOF)
Critical_F_Value
# Create ANOVA table and print the results.
print(ANOVA_Table <- anova(model_spray))
ANOVA_Table
# Find the treatment means.
sumDat <- Insect_Spray %>%
group_by(spray) %>%
summarise(meanAbundance = mean(count))
sumDat
# Add these new R libraries and the
# Tukey HSD test analysis can be run
# using the following functions.
#
##
library(agricolae)
library(rstatix)
##
# Get help
##
?tukey_hsd()
tukey_hsd(Insect_Spray)
tukey_hsd(model_spray)
Test <- aov(lm(count ~ spray,data = Insect_Spray))
Test
posthoc_analysis <- TukeyHSD(Test,'spray')
posthoc_analysis
plot(posthoc_analysis)
