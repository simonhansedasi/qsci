knitr::opts_chunk$set(echo = TRUE)
# Load the data set "Titanic_Survival.csv" and assign it to
# an object named "Titanic".
titanic <- read.csv(titanic.csv)
# Clear the memory.
rm(ls = list())
# Clear the memory.
rm(list = ls())
# Clear the memory.
rm(list = ls())
# Load libraries.
library(dplyr)
library(ggplot2)
library(readr)
# Load the data set "Titanic_Survival.csv" and assign it to
# an object named "Titanic".
titanic <- read.csv('Titanic_Survival.csv')
summary(titanic)
titanic
summary(titanic)
# Totals by class
class <- filter(titanic, by = 'Class')
# Totals by class
class <- filter(titanic, group = 'Class')
# Totals by class
class <- filter(titanic, group == 'Class')
# Totals by class
class <- filter(titanic, group == "Class")
---
title: "Chi Square Tests Tutorial"
knitr::opts_chunk$set(echo = TRUE)
# Clear the memory.
rm(list = ls())
# Load libraries ggplot2, dplyr, and readr
library(ggplot2)
library(dplyr)
library(readr)
# Load the data set "ladybirds_morph_colour"
df <- read.csv("ladybird_morph_color.csv")
# Clear the memory.
rm(list = ls())
# Load libraries ggplot2, dplyr, and readr
library(ggplot2)
library(dplyr)
library(readr)
# Load the data set "ladybirds_morph_colour"
df <- read.csv("ladybirds_morph_colour.csv")
View(df)
# Look at a horizontal view of the data
# using "glimpse()".
View(df)
# Look at a horizontal view of the data
# using "glimpse()".
glimps(df)
# Clear the memory.
rm(list = ls())
# Load libraries ggplot2, dplyr, and readr
library(ggplot2)
library(dplyr)
library(readr)
# Load the data set "ladybirds_morph_colour"
df <- read.csv("ladybirds_morph_colour.csv")
View(df)
# Look at a horizontal view of the data
# using "glimpse()".
glimpse(df)
View(df)
# Look at a horizontal view of the data
# using "glimpse()".
glimpse(df)
lady <- df %>%
group_by(Habitat, morph_color)
View(df)
# Look at a horizontal view of the data
# using "glimpse()".
glimpse(df)
lady <- df %>%
group_by(Habitat, morph_colour)
lady <- df %>%
group_by(Habitat, morph_colour)
lady
lady <- df %>%
group_by(Habitat, morph_colour)
summarise(total.number = sum(number))
lady <- df %>%
group_by(Habitat, morph_colour) %>%
summarise(total.number = sum(number))
lady <- df %>%
group_by(Habitat, morph_colour)
lady
lady.Habitat
lady$Habitat
lady[Habitat == "Rural"]
lady[lady[Habitat] == "Rural"]
lady[lady$ == "Rural"]
lady[lady$ = "Rural"]
lady[lady$Habitat = "Rural"]
lady
cont_table(lady)
?cont_table()
?cont_table()
table(lady)
lady
ctable(lady)
ctable <- table(lady)
ctable
lady%Habitat
lady$Habitat
lady[lady$Habitat ="Industrial"]
lady[lady$Habitat =="Industrial"]
lady[lady$Habitat =="Rural"]
lady[lady$number ==0]
lady %>%
summarise(total.number = sum(number))
ggplot(totals, aes(x = Habitat, y = total.number,
fill = morph_colour)) +
geom_bar(stat = 'identity', position = 'dodge')
ggplot(totals, aes(x = Habitat, y = total.number,
fill = morph_colour)) +
geom_bar(stat = 'identity', position = 'dodge')
ggplot(lady, aes(x = Habitat, y = total.number,
fill = morph_colour)) +
geom_bar(stat = 'identity', position = 'dodge')
totals <- lady %>%
summarise(total.number = sum(number))
lady <- df %>%
group_by(Habitat, morph_colour) %>%
summarise(total.number = sum(number))
lady <- df %>%
group_by(Habitat, morph_colour) %>%
summarise.groups(total.number = sum(number))
lady <- df %>%
group_by(Habitat, morph_colour) %>%
summarise(total.number = sum(number))
lady <- df %>%
group_by(Habitat, morph_colour) %>%
lady <- df %>%
group_by(Habitat, morph_colour)
totals <- lady %>%
summarise(total.number = sum(number))
lady <- df %>%
group_by(Habitat, morph_colour)
summarise(total.number = sum(number))
lady <- df %>%
group_by(Habitat, morph_colour)
summarise(total.number = sum(number))
lady <- df %>%
group_by(Habitat, morph_colour)
summarise(total.number = sum(number))
lady %>%
summarise(total.number = sum(number))
lady <- df %>%
group_by(Habitat, morph_colour) %>%
summarise(total.number = sum(number))
lady
lady %>%
lady
ggplot(lady, aes(x = Habitat, y = total.number,
fill = morph_colour)) +
geom_bar(stat = 'identity', position = 'dodge')
ggplot(totals, aes(x = Habitat, y = total.number,
fill = morph_colour)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_fill_manual(values = c(black = "black", red = "red"))
totals
knitr::opts_chunk$set(echo = TRUE)
# Clear the memory.
rm(list = ls())
# Load libraries ggplot2, dplyr, and readr
library(ggplot2)
library(dplyr)
library(readr)
# Load the data set "ladybirds_morph_colour"
df <- read.csv("ladybirds_morph_colour.csv")
View(df)
# Look at a horizontal view of the data
# using "glimpse()".
glimpse(df)
lady <- df %>%
group_by(Habitat, morph_colour) %>%
summarise(total.number = sum(number))
lady
lady
ggplot(lady, aes(x = Habitat, y = total.number,
fill = morph_colour)) +
geom_bar(stat = 'identity', position = 'dodge')
ggplot(totals, aes(x = Habitat, y = total.number,
fill = morph_colour)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_fill_manual(values = c(black = "black", red = "red"))
ggplot(lady, aes(x = Habitat, y = total.number,
fill = morph_colour)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_fill_manual(values = c(black = "black", red = "red"))
totals
lady
lady.structure
str(lady)
lady.mat <- xtabs(number ~ Habitat + morph_colour,
data = lady)
lady.mat <- xtabs(number ~ Habitat + morph_colour,
data = lady)
totals
# Clear the memory.
rm(list = ls())
# Load libraries ggplot2, dplyr, and readr
library(ggplot2)
library(dplyr)
library(readr)
# Load the data set "ladybirds_morph_colour"
lady <- read.csv("ladybirds_morph_colour.csv")
totals <- lady %>%
group_by(Habitat, morph_colour) %>%
summarise(total.number = sum(number))
totals <- lady %>%
group_by(Habitat, morph_colour) %>%
summarise(total.number = sum(number))
totals
ggplot(totals, aes(x = Habitat, y = total.number,
fill = morph_colour)) +
geom_bar(stat = 'identity', position = 'dodge')
ggplot(totals, aes(x = Habitat, y = total.number,
fill = morph_colour)) +
geom_bar(stat = 'identity', position = 'dodge') +
scale_fill_manual(values = c(black = "black", red = "red"))
str(totals)
totals
# Display the totals (observed values)
# arranged as matrix data
# in the structure of a 2x2 contingency table.
# Display the number of rows
# and columns in "lady.mat".
totals
# Display the totals (observed values)
# arranged as matrix data
# in the structure of a 2x2 contingency table.
lady.mat <- xtabs(number ~ Habitat + morph_colour,
data = lady)
# Display the number of rows
# and columns in "lady.mat".
totals
# Display the totals (observed values)
# arranged as matrix data
# in the structure of a 2x2 contingency table.
lady.mat <- xtabs(number ~ Habitat + morph_colour,
data = lady)
lady.mat
# Display the number of rows
# and columns in "lady.mat".
totals
# Display the totals (observed values)
# arranged as matrix data
# in the structure of a 2x2 contingency table.
lady.mat <- xtabs(number ~ Habitat + morph_colour,
data = lady)
lady.mat
# Display the number of rows
# and columns in "lady.mat".
str(lady.mat)
chisq(lady.data)
qchisq(lady.data)
qchisq(lady.mat)
chisq.test(lady.mat)
# Store the alpha and df values
alpha = 0.05
df = (2-1) * (2-1)
# Display the alpha and df.
print(alpha)
print(df)
?qchisq()
3.841
lady.chi <- chisq.test(lady.mat)
names(lady.chi)
3.841
chisq.test(lady.mat, correct = TRUE)
# Display the results of the chi square test
chisq.test(lady.mat, correct = TRUE)
library(glue)
glue('Critical value from a table: {3.841}')
lady.chi <- chisq.test(lady.mat)
names(lady.chi)
lady.mat
lady.mat
lady.chi$observed
lady.chi$expected
lady.chi$statistic
# Clear the memory.
rm(ls = list())
# Clear the memory.
rm(list = ls())
# Load necessary libraries: ggplot2, dplyr, readr
# Note: Once R loads the libraries, it is not necessary
# to reload them.  But, you may not do this tutorial
# in one session, so we will repeat the process a few
# times so that you know what to do if you restart the
# tutorial after a break.  Once you close RStudio, and hence,
# R, the libraries are no longer resident when you reopen R
# and the script will no longer run.  A little practice with
# that idea will be helpful.
# Clear the memory.
rm(list = ls())
# Load necessary libraries: ggplot2, dplyr, readr
library(ggplot2)
library(dplyr)
library(readr)
# Note: Once R loads the libraries, it is not necessary
# to reload them.  But, you may not do this tutorial
# in one session, so we will repeat the process a few
# times so that you know what to do if you restart the
# tutorial after a break.  Once you close RStudio, and hence,
# R, the libraries are no longer resident when you reopen R
# and the script will no longer run.  A little practice with
# that idea will be helpful.
organisms <- read.csv('organisms.csv')
organisms <- read.csv('Organisms.csv')
# Check the data set using "View()".
# NOTE: The "V" is capitalized. This
# is the raw data.  We will go on to
# summarize the data.
#View(organisms)
glimpse(organisms)
organisms
organisms$Num.Org[-1]
organisms$Num.Org[1]
organisms$Num.Org[0]
organisms$Num.Org[2]
organisms$Num.Org[1]
sum(organisms$Obs)
organisms$Num.Org
lambda <- 1.5
# Calculate Poisson probabilities.
?ppois()
lambda <- 1.5
# Calculate Poisson probabilities.
ppois(organisms, lambda)
lambda <- 1.5
# Calculate Poisson probabilities.
ppois(organisms$Num.Org, lambda)
poisson <- function(organisms$Num.Org, lambda){
poisson <- function(x = organisms$Num.Org, lambda){
ppois(organisms$Num.Org, lambda)
}
poisson <- function(x = organisms$Num.Org, lambda){
ppois(x, lambda)
}
(execute) "poisson"
poisson(organisms$Num.Org, lambda)
poisson
poisson(organisms$Num.Org, lambda)
lambda <- 1.5
# Calculate Poisson probabilities.
qpois(organisms$Num.Org, lambda)
lambda <- 1.5
# Calculate Poisson probabilities.
qpois(organisms$Obs, lambda)
p
lambda <- 1.5
# Calculate Poisson probabilities.
ppois(organisms$Num.Org, lambda)
lambda <- 1.5
# Calculate Poisson probabilities.
rpois(organisms$Num.Org, lambda)
lambda <- 1.5
# Calculate Poisson probabilities.
Expect_Obs <- rpois(organisms$Num.Org, lambda)
lambda <- 1.5
# Calculate Poisson probabilities.
organisms$Expect_Obs <- rpois(organisms$Num.Org, lambda)
lambda <- 1.5
# Calculate Poisson probabilities.
organisms$Expect_Obs <- rpois(organisms$Num.Org, lambda)
organisms
lambda <- 1.5
# Calculate Poisson probabilities.
organisms$Expect_Obs <- rpois(organisms$Num.Org, lambda)
organisms
lambda <- 1.5
# Calculate Poisson probabilities.
organisms$Expect_Obs <- rpois(organisms$Num.Org, lambda)
organisms
lambda <- 1.5
# Calculate Poisson probabilities.
organisms$Expect_Obs <- ppois(organisms$Num.Org, lambda)
organisms
lambda <- 1.5
# Calculate Poisson probabilities.
organisms$Expect_Obs <- dpois(organisms$Num.Org, lambda)
organisms
lambda <- 1.5
# Calculate Poisson probabilities.
organisms$Expect_Obs <- qpois(organisms$Num.Org, lambda)
organisms
lambda <- 1.5
# Calculate Poisson probabilities.
organisms$Expect_Obs <- dpois(organisms$Num.Org, lambda)
organisms
lambda <- 1.5
# Calculate Poisson probabilities.
organisms$Expect_Obs <- dpois(organisms$Obs, lambda)
organisms
lambda <- 1.5
# Calculate Poisson probabilities.
organisms$prob <- dpois(organisms$Obs, lambda)
organisms
lambda <- 1.5
# Calculate Poisson probabilities.
organisms$prob <- dpois(organisms$Obs, lambda)
organisms$Expect_Obs <- organisms$prob * organisms$Obs
lambda <- 1.5
# Calculate Poisson probabilities.
organisms$prob <- dpois(organisms$Obs, lambda)
organisms$Expect_Obs <- organisms$prob * organisms$Obs
organisms
lambda <- 1.5
# Calculate Poisson probabilities.
organisms$prob <- ppois(organisms$Obs, lambda)
organisms$Expect_Obs <- organisms$prob * organisms$Obs
organisms
lambda <- 1.5
# Calculate Poisson probabilities.
organisms$prob <- ppois(organisms$Num.Org, lambda)
organisms$Expect_Obs <- organisms$prob * organisms$Obs
organisms
lambda <- 1.5
# Calculate Poisson probabilities.
organisms$prob <- ppois(organisms$Num.Org, lambda)
organisms$Expect_Obs <- organisms$prob * organisms$Obs
organisms_with_expected_obs <- organisms
organisms_with_expected_obs
alpha = 0.01
df = 5 - 0 - 1
# Display the alpha and df.
alpha = 0.01
df = 5 - 0 - 1
# Display the alpha and df.
print(alpha)
print(df)
?qchisq()
# Display the critical value
print(13.277	)
ChiSquared_Test_Statistic <- (sum(organisms$Obs - organisms$Expect_Obs)^2) / organisms$Expect_Obs
ChiSquared_Test_Statistic <- (sum(organisms$Obs - organisms$Expect_Obs)^2) / organisms$Expect_Obs
print(ChiSquared_Test_Statistic)
ChiSquared_Test_Statistic <- (sum(organisms$Obs - organisms$Expect_Obs)^2 / organisms$Expect_Obs)
print(ChiSquared_Test_Statistic)
ChiSquared_Test_Statistic <- (sum((organisms$Obs - organisms$Expect_Obs)^2 / organisms$Expect_Obs)
print(ChiSquared_Test_Statistic)
ChiSquared_Test_Statistic <- sum((organisms$Obs - organisms$Expect_Obs)^2 / organisms$Expect_Obs)
print(ChiSquared_Test_Statistic)
?pchisq()
?paste()
?pchis()
?pchisq()
1-pchisq(organisms$Obs)
1-pchisq(organisms$Obs, df)
ChiSquared_Test_Statistic <- sum((organisms$num.Obs - organisms$Expect_Obs)^2 / organisms$Expect_Obs)
print(ChiSquared_Test_Statistic)
ChiSquared_Test_Statistic <- sum((organisms$Obs - organisms$Expect_Obs)^2 / organisms$Expect_Obs)
print(ChiSquared_Test_Statistic)
1-poisson(organisms$Num.Org, lambda)
poisson <- function(x = organisms$Num.Org, lambda){
1-ppois(x, lambda)
}
lambda <- 1.5
# Calculate Poisson probabilities.
organisms$prob <- 1- ppois(organisms$Num.Org, lambda)
organisms$Expect_Obs <- organisms$prob * organisms$Obs
organisms_with_expected_obs <- organisms
poisson <- function(x = organisms$Num.Org, lambda){
1-ppois(x, lambda)
}
poisson <- function(x = organisms$Num.Org, lambda){
1-ppois(x, lambda)
}
poisson
1-poisson(organisms$Num.Org, lambda)
organisms_with_expected_obs
alpha = 0.01
df = 5 - 0 - 1
# Display the alpha and df.
print(alpha)
print(df)
?qchisq()
# Display the critical value
print(13.277	)
ChiSquared_Test_Statistic <- sum((organisms$Obs - organisms$Expect_Obs)^2 / organisms$Expect_Obs)
print(ChiSquared_Test_Statistic)
